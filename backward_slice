`timescale 1ns / 1ps

module backward_slice(
    input clk,
    input rst_n,

    input in_vld_src,
    input [15:0]in_data_src,

    output reg in_vld_dst,
    input out_rdy_dst,
    output reg [15:0]in_data_dst

);
reg [15:0]in_data_reg;
always @(posedge clk or negedge rst_n) begin
    if(~rst_n)
        in_data_reg <= 0;
    else if(in_vld_src && (~out_rdy_dst))
        in_data_reg <= in_data_src;
    else
end
assign in_data_dst = (in_vld_reg)?in_data_reg:in_data_src;

always @(posedge clk or negedge rst_n) begin
    if(~rst_n)
        in_vld_dst <= 0;
    else if(in_vld_src && (~out_rdy_dst))
        in_vld_dst <= 1;
    else 
    	in_vld_dst <= 0;
end

always @(posedge clk or negedge rst_n) begin
    if(~rst_n)
        out_rdy_src <= 0;
    else
        out_rdy_src <= out_rdy_dst;
end

endmodule
